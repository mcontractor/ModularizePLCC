# Language V4: procs

skip WHITESPACE '\s+'
skip COMMENT '%.*'

ADD1OP 'add1'
ADDOP '\+'
ASSIGN '='
COMMA ','
DIVOP '/'
LPAREN '\('
MULOP '\*'
RPAREN '\)'
SUB1OP 'sub1'
SUBOP '\-'
ZEROP 'zero\?'

LIT '\d+'
VAR '[A-Za-z]\w*\??'
%
<program>        ::= <exp>
<exp>:LitExp     ::= <LIT>
<exp>:PrimAppExp ::= <prim> LPAREN <operands> RPAREN
<exp>:VarExp     ::= <VAR>
<operands>       **= <exp> +COMMA

<prim>:AddPrim   ::= ADDOP
<prim>:SubPrim   ::= SUBOP
<prim>:Add1Prim  ::= ADD1OP
<prim>:Sub1Prim  ::= SUB1OP
<prim>:MulPrim   ::= MULOP
<prim>:DivPrim   ::= DIVOP
<prim>:ZeropPrim ::= ZEROP
%

# class methods that just print out the expression
# (Remember that use of toString is only mandated at the tree's
#  root node.)

*:import
%%%
import env.*;
%%%

include Add1Prim-i.java
include AddPrim-i.java
include DivPrim-i.java
include Exp-i.java
include LitExp-i.java
include MulPrim-i.java
include Operands-i.java
include Prim-i.java
include PrimAppExp-i.java
include Program-i.java
include Sub1Prim-i.java
include SubPrim-i.java
include VarExp-i.java
include ZeropPrim-i.java
