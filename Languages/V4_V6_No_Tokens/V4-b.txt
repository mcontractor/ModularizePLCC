# Language V4: If-a.txt, Let-a.txt, Proc-a.txt, Seq-a.txt, ZeroP-a.txt
# Language V5: If-a.txt, Let-a.txt, Proc-a.txt, Seq-a.txt, ZeroP-a.txt, LetRec-a.txt
# Language V6: If-a.txt, Let-a.txt, Proc-a.txt, Seq-a.txt, ZeroP-a.txt, LetRec-a.txt, Define-a.txt
# Language SET: If-a.txt, Proc-a.txt, Seq-a.txt, ZeroP-a.txt, Set-a.txt
# Language REF: If-a.txt, Seq-a.txt, ZeroP-a.txt, Set-a.txt, Ref-a.txt

skip WHITESPACE '\s+'
skip COMMENT '%.*'
LIT '\d+'
LPAREN '\('
RPAREN '\)'
COMMA ','
ADDOP '\+'
SUBOP '\-'
ASSIGN '='
DIVOP '/'
MULOP '\*'
ADD1OP 'add1'
SUB1OP 'sub1'
VAR '[A-Za-z]\w*'
%
<program>:Eval   ::= <exp>
<exp>:LitExp     ::= <LIT>
<exp>:VarExp     ::= <VAR>
<exp>:PrimAppExp ::= <prim> LPAREN <operands> RPAREN
<operands>       **= <exp> +COMMA
<prim>:AddPrim   ::= ADDOP
<prim>:SubPrim   ::= SUBOP
<prim>:MulPrim   ::= MULOP
<prim>:DivPrim   ::= DIVOP
<prim>:Add1Prim  ::= ADD1OP
<prim>:Sub1Prim  ::= SUB1OP
%

# UNCOMMENT THESE LINES FOR V5 AND V6
*:import
%%%
import env.*;
%%%

# class methods that just print out the expression
# (Remember that use of toString is only mandated at the tree's
#  root node.)

include Add1Prim-i.java
include AddPrim-i.java
include MulPrim-i.java
include DivPrim-i.java
include Exp-i.java
include LitExp-i.java
include Prim-i.java
include PrimAppExp-i.java
include Program-i.java
include Operands-i.java
include Sub1Prim-i.java
include SubPrim-i.java
include VarExp-i.java


